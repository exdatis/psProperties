/*
 * Copyright (C) 2016 morar
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package bsproperties;

import java.awt.Cursor;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.Period;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author morar
 */
public class JPropertiesDlg extends javax.swing.JFrame {

    /**
     * Creates new form JPropertiesDlg
     */
    public JPropertiesDlg() {
        initComponents();
        // set location to desktop-center
        this.setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileOpenDlg = new javax.swing.JFileChooser();
        jFileSaveDlg = new javax.swing.JFileChooser();
        jPUP = new javax.swing.JPopupMenu();
        jmiShowVariables = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jmiConnect = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDbUser = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jDbPwd = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jDbHost = new javax.swing.JTextField();
        jbtnSave = new javax.swing.JButton();
        jbtnClose = new javax.swing.JButton();
        jbtnLoadProperties = new javax.swing.JButton();

        jFileOpenDlg.setDialogTitle("Open properties file");
        jFileOpenDlg.setFileFilter(new MyCustomFilter());

        jFileSaveDlg.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileSaveDlg.setDialogTitle("Save Java properties file");
        jFileSaveDlg.setFileFilter(new MyCustomFilter());

        jmiShowVariables.setText("Show all");
        jmiShowVariables.setToolTipText("Current vars");
        jmiShowVariables.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiShowVariables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiShowVariablesActionPerformed(evt);
            }
        });
        jPUP.add(jmiShowVariables);
        jPUP.add(jSeparator1);

        jmiConnect.setText("Test connection");
        jmiConnect.setToolTipText("Check mysql");
        jmiConnect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jmiConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConnectActionPerformed(evt);
            }
        });
        jPUP.add(jmiConnect);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The book store - Hol");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Properties "));

        jLabel1.setText("Db user");

        jLabel2.setText("DbPassword");
        jLabel2.setComponentPopupMenu(jPUP);

        jLabel3.setText("Db host");

        jDbHost.setText("localhost");
        jDbHost.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jDbHostFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDbUser)
                    .addComponent(jDbPwd)
                    .addComponent(jDbHost))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jDbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDbPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDbHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnSave.setText("Sačuvaj");
        jbtnSave.setToolTipText("Sačuvaj izmene");
        jbtnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        jbtnClose.setText("Izadji");
        jbtnClose.setToolTipText("Zatvori dialog");
        jbtnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCloseActionPerformed(evt);
            }
        });

        jbtnLoadProperties.setText("Učitaj");
        jbtnLoadProperties.setToolTipText("Učitaj postojeći file");
        jbtnLoadProperties.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnLoadProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadPropertiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnLoadProperties, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                        .addComponent(jbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnClose)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbtnClose, jbtnLoadProperties, jbtnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSave)
                    .addComponent(jbtnClose)
                    .addComponent(jbtnLoadProperties))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * call method doQuitApp(exit from application)
     * @param evt 
     */
    private void jbtnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCloseActionPerformed
        this.doQuitApp();
    }//GEN-LAST:event_jbtnCloseActionPerformed
    /**
     * Select current text
     * @param evt 
     */
    private void jDbHostFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDbHostFocusGained
        // select all
        this.jDbHost.selectAll();
    }//GEN-LAST:event_jDbHostFocusGained
    /**
     * run open dialog(open Java Properties file)
     * read Properties file
     * put values to text fields
     * @param evt 
     */ 
    private void jbtnLoadPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadPropertiesActionPerformed
        String res = this.doFileOpenDlg();
        if(res == "")
            return;
        // set cursor(uspesno ovaj put
        this.setCursor(java.awt.Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        // read
        File test = new File(res);
        if(!test.exists())
            return;
        try {
            //else read existent Java Proeprties
            this.currProperties = DbProperties.readPropertiesFile(res);
        } catch (IOException ex) {
            Logger.getLogger(JPropertiesDlg.class.getName()).log(Level.SEVERE, null, ex);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        // DbProperties
        DbProperties temp = new DbProperties();
        //set values
        String encUser = this.currProperties.getProperty(DbProperties.KEY_USER);
        String encPwd = this.currProperties.getProperty(DbProperties.KEY_PWD);
        String encHost = this.currProperties.getProperty(DbProperties.KEY_HOST);
        // decrypt
        temp.setDbUser(temp.getDecryptedValue(encUser));
        temp.setDbPwd(temp.getDecryptedValue(encPwd));
        temp.setDbHost(temp.getDecryptedValue(encHost));
        // this is an old decrypted properties
        this.oldDecryptedProperties = temp.createJavaProperties();
        // set text fields
        this.jDbUser.setText(this.oldDecryptedProperties.getProperty(DbProperties.KEY_USER, ""));
        this.jDbPwd.setText(this.oldDecryptedProperties.getProperty(DbProperties.KEY_PWD, ""));
        this.jDbHost.setText(this.oldDecryptedProperties.getProperty(DbProperties.KEY_HOST, ""));
        // reset cursor
        this.setCursor(java.awt.Cursor.getDefaultCursor());
    }//GEN-LAST:event_jbtnLoadPropertiesActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        // Save new or replace existent java properties file
        String path = this.doFileSaveDialog();
        String tempUser = String.copyValueOf(this.jDbUser.getPassword());
        String tempPwd = String.copyValueOf(this.jDbPwd.getPassword());
        DbProperties temp = new DbProperties(tempUser, tempPwd, this.jDbHost.getText());
        this.newDecryptedProperties = temp.createJavaProperties();
        this.currProperties = temp.encryptProperties(this.newDecryptedProperties);
        boolean savePropertiesFile = false;
        try {
            savePropertiesFile = DbProperties.savePropertiesFile(this.currProperties, path);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(JPropertiesDlg.class.getName()).log(Level.SEVERE, null, ex);
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        if(savePropertiesFile)
            JOptionPane.showMessageDialog(null, "Success.");
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jmiShowVariablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiShowVariablesActionPerformed
        // Show variables in joptionpane
        String usr = String.copyValueOf(this.jDbUser.getPassword());
        String pwd = String.copyValueOf(this.jDbPwd.getPassword());
        String host = this.jDbHost.getText();
        StringBuilder msg = new StringBuilder();
        msg.append("User: " + usr);
        msg.append("\nPwd: " + pwd);
        msg.append("\nHost: " + host);
        JOptionPane.showMessageDialog(null, msg.toString());
    }//GEN-LAST:event_jmiShowVariablesActionPerformed

    private void jmiConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConnectActionPerformed
        // check mysql connection
        String usr = String.copyValueOf(this.jDbUser.getPassword());
        String pwd = String.copyValueOf(this.jDbPwd.getPassword());
        String host = this.jDbHost.getText();
        String url = "jdbc:mysql://" + host + "/information_schema";
        Connection conn = null;
        LocalDateTime startTime = LocalDateTime.now();
        try {
            conn = DriverManager.getConnection(url, usr, pwd);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            return;
        }
        // end time
        LocalDateTime endTime = LocalDateTime.now();
        Duration diff = Duration.between(startTime, endTime);
        
        //else show success msg
        JOptionPane.showMessageDialog(null, "Success (time : " + diff.toString() + ")");
        try {
            if(conn != null)
                conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(JPropertiesDlg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiConnectActionPerformed
    /**
     * System-exit (quit app)
     */
    private void doQuitApp(){
        System.exit(0);
    }
    /**
     * Dialog (find existent Java Properties file)
     * @return (full path)
     */
    private String doFileOpenDlg(){
        int res =this.jFileOpenDlg.showOpenDialog(this);
        // return file name
        if(res != 0)
            return "";
        else{
            File selected = this.jFileOpenDlg.getSelectedFile();
            String myResult = selected.getAbsolutePath();
            return myResult;
        }
    }
    
    private String doFileSaveDialog(){
        int res = this.jFileSaveDlg.showSaveDialog(this);
        if(res != 0)
            return "";
        // return file name
        File selected = this.jFileSaveDlg.getSelectedFile();
        String myResult = selected.getAbsolutePath();
        return myResult;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPropertiesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPropertiesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPropertiesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPropertiesDlg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JPropertiesDlg().setVisible(true);
            }
        });
    }
    
    /**
     * inner class (custom filter for file-open-dialog)
     */
    class MyCustomFilter extends javax.swing.filechooser.FileFilter {

        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".properties");
        }

        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Java properties (*.properties)";
        }
    }
    // Variables declaration
    private Properties currProperties = null;
    private Properties newDecryptedProperties = null;
    private Properties oldDecryptedProperties = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jDbHost;
    private javax.swing.JPasswordField jDbPwd;
    private javax.swing.JPasswordField jDbUser;
    private javax.swing.JFileChooser jFileOpenDlg;
    private javax.swing.JFileChooser jFileSaveDlg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPUP;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JButton jbtnClose;
    private javax.swing.JButton jbtnLoadProperties;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JMenuItem jmiConnect;
    private javax.swing.JMenuItem jmiShowVariables;
    // End of variables declaration//GEN-END:variables
}
